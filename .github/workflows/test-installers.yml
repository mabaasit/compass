name: Test Installers

permissions:
  contents: read

# Using "bash" everywhere to make "--" separation of arguments work predictively when invoking NPM script on Windows
defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        type: string
        description: 'S3 bucket to download installers from'
        required: true
      bucket_key_prefix:
        type: string
        description: 'S3 bucket key prefix to download installers from'
        required: true
      dev_version:
        type: string
        description: 'Dev version of the installer to download'
      nonce:
        type: string
        description: 'A random string to track the run from dispatch to watching'
      github_pr_number:
        type: string
        description: 'Number of the PR that triggered this run'
      evergreen_task_url:
        type: string
        description: 'URL to the Evergreen job that triggered this run'

run-name: Test Installers ${{ github.event.inputs.dev_version || github.ref_name }} / (nonce = ${{ github.event.inputs.nonce || 'not set' }})

jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
      - name: Add URL for the GitHub PR
        if: ${{ github.event.inputs.github_pr_number }}
        run: echo "[GitHub PR ${{ github.event.inputs.github_pr_number }}](https://github.com/mongodb-js/compass/pull/${{ github.event.inputs.github_pr_number }})" >> $GITHUB_STEP_SUMMARY
      - name: Add URL for the Evergreen task
        if: ${{ github.event.inputs.evergreen_task_url }}
        run: echo "[Evergreen Task](${{ github.event.inputs.evergreen_task_url }})" >> $GITHUB_STEP_SUMMARY
  test:
    name: ${{ matrix.package }} test ${{ matrix.test }} (${{ matrix.hadron-distribution }})
    # Windows specifically takes A TON of time to bootstrap itself before being
    # able to run tests, so we're setting the timeout pretty high to account for
    # that
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        test:
          - time-to-first-query
        package:
          - linux_rpm
        hadron-distribution:
          - compass
        include:
          - package: linux_rpm
            runs-on: ubuntu-latest
            arch: x64
            hadron-platform: linux
            distro-id: rhel80
            post-checkout-command: |
              dnf clean all && dnf update -y --refresh
              dnf install -y gcc gcc-c++ make git nss dbus xorg-x11-server-Xvfb yum-utils
              # Enable the devel repo to install compat-openssl11 (bringing libcrupto.so.1.1 to run mongod)
              dnf config-manager --set-enabled devel
              dnf update -y
              dnf install -y compat-openssl11
            container:
              image: rockylinux:9
              volumes:
                - ${{ github.workspace }}:/compass
    runs-on: ${{ matrix.runs-on }}
    container: ${{ matrix.container }}
    env:
      DEBUG: compass:smoketests:*,compass-e2e-tests:*
      # Similar to total task timeout, setting these higher than the default
      # value to account for very slow windows machines
      COMPASS_E2E_MOCHA_TIMEOUT: 720000 # 12min
      COMPASS_E2E_WEBDRIVER_WAITFOR_TIMEOUT: 360000 # 6min
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.15.1
          cache: 'npm'

      - name: Run post-checkout command
        if: matrix.post-checkout-command
        run: ${{ matrix.post-checkout-command }}
